{"version":3,"sources":["services/contacts.js","components/Contact.js","components/ContactDisplay.js","components/ErrorDisplay.js","App.js","reportWebVitals.js","index.js"],"names":["baseURL","contacts","getAll","axios","get","then","res","data","create","newContact","post","update","id","put","concat","remove","delete","Contact","_ref","person","setPersons","allPersons","setError","react_default","a","createElement","className","firstName","lastName","phoneNumber","onClick","e","window","confirm","contactsService","filter","p","catch","err","setTimeout","bind","ContactDisplay","personsToShow","map","components_Contact","key","ErrorDisplay","error","style","color","name","message","App","_useState","useState","_useState2","Object","slicedToArray","persons","_useState3","_useState4","newFirstName","setNewFirstName","_useState5","_useState6","newLastName","setNewLastName","_useState7","_useState8","newPhoneNumber","setNewPhoneNumber","_useState9","_useState10","filterBy","setFilterBy","_useState11","_useState12","useEffect","toLowerCase","includes","toLocaleLowerCase","components_ErrorDisplay","onSubmit","event","preventDefault","newPerson","some","alreadyExists","alert","type","onChange","target","value","trim","query","components_ContactDisplay","reportWebVitals","onPerfEntry","Function","__webpack_require__","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"kPACMA,EAAU,gBAsBDC,EAAA,CAAEC,OApBF,WACb,OAAOC,IAAMC,IAAIJ,GACJK,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAkBNC,OAfV,SAACC,GACd,OAAON,IAAMO,KAAKV,EAASS,GACdJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAaEI,OAVlB,SAACC,EAAIH,GAClB,OAAON,IAAMU,IAAN,GAAAC,OAAad,EAAb,KAAAc,OAAwBF,GAAMH,GACxBJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,QAQUQ,OAL1B,SAACH,GACd,OAAOT,IAAMa,OAAN,GAAAF,OAAgBd,EAAhB,KAAAc,OAA2BF,IACrBP,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SCIhBU,SArBC,SAAAC,GAAkD,IAA/CC,EAA+CD,EAA/CC,OAAQC,EAAuCF,EAAvCE,WAAYC,EAA2BH,EAA3BG,WAAYC,EAAeJ,EAAfI,SAajD,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UAAKN,EAAOQ,UAAW,OAAUR,EAAOS,SAAxC,KAAoDT,EAAOU,aAC3DN,EAAAC,EAAAC,cAAA,UAAQK,QAfU,SAACC,GAChBC,OAAOC,QAAP,mCAAAnB,OAAkDK,EAAOQ,UAAzD,KAAAb,OAAsEK,EAAOS,SAA7E,0BACLM,EAAgBnB,OAAOI,EAAOP,IACdP,KAAK,WACLe,EAAWC,EAAWc,OAAO,SAAAC,GAAC,OAAIA,EAAExB,KAAOO,EAAOP,QAElDyB,MAAM,SAAAC,GACNhB,EAASgB,GACTC,WAAWjB,EAASkB,KAAK,KAAM,MAAO,SAOpD,aCLSC,EAXQ,SAAAvB,GAAyD,IAAtDwB,EAAsDxB,EAAtDwB,cAAerB,EAAuCH,EAAvCG,WAAYD,EAA2BF,EAA3BE,WAAYE,EAAeJ,EAAfI,SAC/D,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,sBACCiB,EAAcC,IAAI,SAAAxB,GAAM,OACvBI,EAAAC,EAAAC,cAACmB,EAAD,CAASC,IAAK1B,EAAOQ,UAAWR,OAAQA,EAAQC,WAAYA,EAAYC,WAAYA,EAAYC,SAAUA,QCEnGwB,EARM,SAAA5B,GAAe,IAAZ6B,EAAY7B,EAAZ6B,MACtB,GAAc,OAAVA,EAEJ,OACExB,EAAAC,EAAAC,cAAA,KAAGuB,MAAO,CAAEC,MAAO,QAAnB,GAAAnC,OAAgCiC,EAAMG,KAAtC,MAAApC,OAA+CiC,EAAMI,WCiG1CC,MAhGf,WAAe,IAAAC,EACiBC,mBAAS,IAD1BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACGnC,EADHmC,EAAA,GAAAI,EAE2BL,mBAAS,IAFpCM,EAAAJ,OAAAC,EAAA,EAAAD,CAAAG,EAAA,GAENE,EAFMD,EAAA,GAEQE,EAFRF,EAAA,GAAAG,EAGyBT,mBAAS,IAHlCU,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGNE,EAHMD,EAAA,GAGOE,EAHPF,EAAA,GAAAG,EAI+Bb,mBAAS,IAJxCc,EAAAZ,OAAAC,EAAA,EAAAD,CAAAW,EAAA,GAINE,EAJMD,EAAA,GAIUE,EAJVF,EAAA,GAAAG,EAKmBjB,mBAAS,IAL5BkB,EAAAhB,OAAAC,EAAA,EAAAD,CAAAe,EAAA,GAKNE,EALMD,EAAA,GAKIE,EALJF,EAAA,GAAAG,EAMarB,mBAAS,MANtBsB,EAAApB,OAAAC,EAAA,EAAAD,CAAAmB,EAAA,GAMN5B,EANM6B,EAAA,GAMCtD,EANDsD,EAAA,GAQbC,oBAAU,WACR3C,EAAgBhC,SACAG,KAAK,SAAAqD,GAAO,OAAItC,EAAWsC,MAC1C,IAEH,IAqDIhB,EAAgBgB,EAAQvB,OAAO,SAAAhB,GACjC,MAAO,GAAAL,OAAGK,EAAOQ,UAAUmD,cAApB,KAAAhE,OAAqCK,EAAOS,SAASkD,eAAgBC,SAASN,EAASO,uBAGhG,OACEzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwD,EAAD,CAAclC,MAAOA,IACrBxB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,QAAMyD,SAtDW,SAACC,GACpBA,EAAMC,iBAEN,IAAIC,EAAY,CACd1D,UAAWkC,EACXjC,SAAUqC,EACVpC,YAAawC,GAGf,GAhBoB,SAACgB,GACrB,OAAQ3B,EAAQ4B,KAAK,SAAAnE,GACZ,OAASA,EAAOQ,UAAUmD,gBAAkBO,EAAU1D,UAAUmD,eACvD3D,EAAOS,SAASkD,gBAAkBO,EAAUzD,SAASkD,gBAanES,CAAcF,GAChB,OAAOG,MAAK,IAAA1E,OAAK+C,EAAL,KAAA/C,OAAqBmD,EAArB,sBAGd/B,EAAgB1B,OAAO6E,GACPhF,KAAK,SAAAc,GACFC,EAAWsC,EAAQ5C,OAAOK,IAC1B2C,EAAgB,IAChBI,EAAe,IACfI,EAAkB,MAEtBjC,MAAM,SAAAC,GACLhB,EAASgB,GACTC,WAAWjB,EAASkB,KAAK,KAAM,MAAO,SAiClDjB,EAAAC,EAAAC,cAAA,0BACcF,EAAAC,EAAAC,cAAA,SAAOb,GAAG,iBAAiB6E,KAAK,OAAOC,SA9B9B,SAACP,GAC5B,IAAItB,EAAesB,EAAMQ,OAAOC,MAAMC,OACtC/B,EAAgBD,IA4ByE+B,MAAO/B,KAE5FtC,EAAAC,EAAAC,cAAA,yBACaF,EAAAC,EAAAC,cAAA,SAAOb,GAAG,gBAAgB6E,KAAK,OAAOC,SA5B7B,SAACP,GAC3B,IAAIlB,EAAckB,EAAMQ,OAAOC,MAAMC,OACrC3B,EAAeD,IA0BuE2B,MAAO3B,KAEzF1C,EAAAC,EAAAC,cAAA,4BACgBF,EAAAC,EAAAC,cAAA,SAAOb,GAAG,mBAAmB6E,KAAK,OAAOC,SA1BhC,SAACP,GAC9B,IAAId,EAAiBc,EAAMQ,OAAOC,MAClCtB,EAAkBD,IAwB6EuB,MAAOvB,KAElG9C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQgE,KAAK,UAAb,YAGJlE,EAAAC,EAAAC,cAAA,sBACUF,EAAAC,EAAAC,cAAA,SAAOb,GAAG,YAAY6E,KAAK,OAAOC,SA5BtB,SAACP,GACzB,IAAIW,EAAQX,EAAMQ,OAAOC,MACzBlB,EAAYoB,IA0B+DF,MAAOnB,KAEhFlD,EAAAC,EAAAC,cAACsE,EAAD,CAAgB1E,WAAYqC,EAAShB,cAAeA,EAAetB,WAAYA,EAAY2B,MAAOA,EAAOzB,SAAUA,MCtF1G0E,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAApE,EAAA,GAAA1B,KAAA8F,EAAA3D,KAAA,UAAqBnC,KAAK,SAAAa,GAAiD,IAA9CkF,EAA8ClF,EAA9CkF,OAAQC,EAAsCnF,EAAtCmF,OAAQC,EAA8BpF,EAA9BoF,OAAQC,EAAsBrF,EAAtBqF,OAAQC,EAActF,EAAdsF,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,MCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHtF,EAAAC,EAAAC,cAACF,EAAAC,EAAMsF,WAAP,KACEvF,EAAAC,EAAAC,cAACsF,EAAD,QAOJf","file":"static/js/main.8c7de437.chunk.js","sourcesContent":["import axios from 'axios';\nconst baseURL = '/api/contacts';\n\nconst getAll = () => {\n  return axios.get(baseURL)\n              .then(res => res.data);\n}\n\nconst create = (newContact) => {\n  return axios.post(baseURL, newContact)\n              .then(res => res.data);\n}\n\nconst update = (id, newContact) => {\n  return axios.put(`${baseURL}/${id}`, newContact)\n              .then(res => res.data);\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseURL}/${id}`)\n              .then(res => res.data);\n}\n\nexport default { getAll, create, update, remove };","import React from 'react';\nimport contactsService from '../services/contacts'\n\nconst Contact = ({ person, setPersons, allPersons, setError }) => {\n  const deleteHandler = (e) => {\n    if (!window.confirm(`Are you sure you want to delete ${person.firstName} ${person.lastName} from your contacts?`)) return;\n    contactsService.remove(person.id)\n                   .then(() => {\n                    setPersons(allPersons.filter(p => p.id !== person.id));\n                   })\n                   .catch(err => {\n                    setError(err);\n                    setTimeout(setError.bind(null, null), 4000);\n                  });\n  }\n\n  return (\n    <div className='contact'>\n      <h3>{person.firstName}{'\\u00a0'}{person.lastName}: {person.phoneNumber}</h3>\n      <button onClick={deleteHandler}>Delete</button>\n    </div>\n  );\n}\n\nexport default Contact","import React from 'react';\nimport Contact from './Contact.js';\n\nconst ContactDisplay = ({ personsToShow, allPersons, setPersons, setError }) => {\n  return (\n    <div className='contact_display'>\n      <h1>Contacts</h1>\n      {personsToShow.map(person => \n        <Contact key={person.firstName} person={person} setPersons={setPersons} allPersons={allPersons} setError={setError}></Contact>\n      )}\n    </div>\n  );\n}\n\nexport default ContactDisplay","import React from 'react';\n\nconst ErrorDisplay = ({ error }) => {\n  if (error === null) return;\n\n  return (\n    <p style={{ color: 'red' }}>{`${error.name}: ${error.message}`}</p>\n  )\n}\n\nexport default ErrorDisplay;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport contactsService from './services/contacts'\nimport './App.css';\nimport ContactDisplay from './components/ContactDisplay';\nimport ErrorDisplay from './components/ErrorDisplay';\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [newFirstName, setNewFirstName] = useState('');\n  const [newLastName, setNewLastName] = useState('');\n  const [newPhoneNumber, setNewPhoneNumber] = useState('');\n  const [filterBy, setFilterBy] = useState('');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    contactsService.getAll()\n                   .then(persons => setPersons(persons));\n  }, []);\n\n  const alreadyExists = (newPerson) => {\n    return (persons.some(person => {\n             return ( person.firstName.toLowerCase() === newPerson.firstName.toLowerCase() &&\n                      person.lastName.toLowerCase() === newPerson.lastName.toLowerCase() )\n    }));\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let newPerson = {\n      firstName: newFirstName,\n      lastName: newLastName,\n      phoneNumber: newPhoneNumber,\n    }\n\n    if (alreadyExists(newPerson)) {\n      return alert(`\"${newFirstName} ${newLastName}\" already exists!`);\n    }\n\n    contactsService.create(newPerson)\n                   .then(person => {\n                       setPersons(persons.concat(person));\n                       setNewFirstName('');\n                       setNewLastName('');\n                       setNewPhoneNumber('');\n                   })\n                  .catch(err => {\n                    setError(err);\n                    setTimeout(setError.bind(null, null), 4000);\n                  });\n  }\n\n  const handleFirstNameInput = (event) => {\n    let newFirstName = event.target.value.trim();\n    setNewFirstName(newFirstName);\n  }\n\n  const handleLastNameInput = (event) => {\n    let newLastName = event.target.value.trim();\n    setNewLastName(newLastName);\n  }\n\n  const handlePhoneNumberInput = (event) => {\n    let newPhoneNumber = event.target.value;\n    setNewPhoneNumber(newPhoneNumber);\n  }\n\n  const handleSearchInput = (event) => {\n    let query = event.target.value;\n    setFilterBy(query);\n  }\n\n  let personsToShow = persons.filter(person => {\n    return `${person.firstName.toLowerCase()} ${person.lastName.toLowerCase()}`.includes(filterBy.toLocaleLowerCase())\n  });\n\n  return (\n    <div className=\"App\">\n      <ErrorDisplay error={error}></ErrorDisplay>\n      <h1>New Contact</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          First Name: <input id='firstNameInput' type='text' onChange={handleFirstNameInput} value={newFirstName}/>\n        </div>\n        <div>\n          Last Name: <input id='lastNameInput' type='text' onChange={handleLastNameInput} value={newLastName}/>\n        </div>\n        <div>\n          Phone Number: <input id='phoneNumberInput' type='text' onChange={handlePhoneNumberInput} value={newPhoneNumber}/>\n        </div>\n        <div>\n          <button type='submit'>Submit</button>\n        </div>\n      </form>\n      <div>\n        Search: <input id='searchBar' type='text' onChange={handleSearchInput} value={filterBy}></input>\n      </div>\n      <ContactDisplay allPersons={persons} personsToShow={personsToShow} setPersons={setPersons} error={error} setError={setError}></ContactDisplay>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}